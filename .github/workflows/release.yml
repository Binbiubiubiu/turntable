name: Release

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo package
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          title: $tag
          branch: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo publish
        continue-on-error: true
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    needs:
      - create-release
    strategy:
      matrix:
        # When updating this list, the reminder to update the target list in ci.yml.
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: i686-unknown-freebsd
            os: ubuntu-latest
          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
          - target: x86_64-unknown-illumos
            os: ubuntu-latest

          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest

          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # - target: universal-apple-darwin
          #   os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl') && !contains(fromJSON('["x86_64-unknown-illumos"]'), matrix.target)
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1.1.0
        with:
          # Optionally strip `v` prefix
          strip_v: true
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: git-semver-tags
          include: LICENSE,README.md
          archive: $bin-${{steps.tag.outputs.tag}}-$target
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
